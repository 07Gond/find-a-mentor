{"version":3,"sources":["AutoComplete.js","channelProvider.js","MentorsList.js","Logo.js","App.js","lists.js","serviceWorker.js","index.js"],"names":["AutoComplete","resetComponent","_this","setState","isLoading","results","value","props","onReset","handleResultSelect","e","_ref","result","title","handleSearchChange","_ref2","source","setTimeout","state","length","re","RegExp","escapeRegExp","filter","test","this","_this$state","react_default","a","createElement","className","Search","loading","onResultSelect","onSearchChange","debounce","leading","placeholder","Component","providers","slack","icon","url","email","MentorsLists","page","loadMore","newProps","mentors","items","slice","map","mentor","index","Card","key","Content","Image","floated","size","src","avatar","Header","name","Meta","Description","description","extra","tags","tag","Label","horizontal","channels","channel","_getChannelInfo","type","id","_providers$type","replace","getChannelInfo","href","target","rel","content","Group","centered","react_infinite_scroller_default","hasMore","Logo","xmlns","width","height","viewBox","fill","color","fillRule","points","d","tagsSource","countriesSource","country","App","handleTagSelect","handleCountrySelect","filterMentors","includes","resetTag","resetCountry","push","apply","Object","toConsumableArray","src_Logo","AutoComplete_AutoComplete","MentorsList_MentorsLists","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.31d3c5e6.chunk.js","sourcesContent":["import './AutoComplete.css';\n\nimport React, { Component } from 'react'\nimport { Search } from 'semantic-ui-react'\nimport debounce from 'lodash/debounce';\nimport escapeRegExp from 'lodash/escapeRegExp';\nimport filter from 'lodash/filter';\n\nexport default class AutoComplete extends Component {\n  componentWillMount() {\n    this.resetComponent()\n  }\n\n  resetComponent = () => {\n    this.setState({ isLoading: false, results: [], value: '' });\n    this.props.onReset();\n  }\n\n  handleResultSelect = (e, { result }) => {\n    this.setState({ value: result.title })\n    this.props.handleResultSelect(result);\n  }\n\n  handleSearchChange = (e, { value }) => {\n    const { source } = this.props;\n    this.setState({ isLoading: true, value })\n\n    setTimeout(() => {\n      if (this.state.value.length < 1) return this.resetComponent()\n\n      const re = new RegExp(escapeRegExp(this.state.value), 'i')\n      const isMatch = result => re.test(result.title)\n\n      this.setState({\n        isLoading: false,\n        results: filter(source, isMatch),\n      })\n    }, 300)\n  }\n\n  render() {\n    const { isLoading, value, results } = this.state\n\n    return (\n      <div className=\"Search-wrapper\">\n        <Search\n          loading={isLoading}\n          onResultSelect={this.handleResultSelect}\n          onSearchChange={debounce(this.handleSearchChange, 500, { leading: true })}\n          results={results}\n          value={value}\n          placeholder={this.props.placeholder}\n          className=\"Search-input\"\n        />\n      </div>\n    )\n  }\n}","const providers = {\n  slack: {\n    icon: 'slack',\n    url: 'slack://user?id={id}'\n  },\n  email: {\n    icon: 'at',\n    url: 'mailto:{id}'\n  }\n}\n\nexport function getChannelInfo(channel) {\n  const { type, id } = channel;\n  const { icon, url } = providers[type];\n  return {\n    icon,\n    url: url.replace('{id}', id)\n  }\n}","import React, { Component } from 'react';\n\nimport { Card, Image, Label } from 'semantic-ui-react';\nimport { getChannelInfo } from './channelProvider';\nimport InfiniteScroll from 'react-infinite-scroller';\n\nconst itemsInPage = 10;\n\nexport default class MentorsLists extends Component {\n  state = {\n    page: 1\n  }\n\n  loadMore = () => {\n    this.setState({\n      page: this.state.page + 1\n    })\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.mentors !== this.props.mentors) {\n      this.setState({\n        page: 1\n      })\n    }\n  }\n\n  render() {\n    const { mentors } = this.props;\n    const items = mentors.slice(0, this.state.page * itemsInPage).map((mentor, index) => {\n      return (<Card key={index}>\n        <Card.Content>\n          <Image floated='right' size='mini' src={mentor.avatar} />\n          <Card.Header>{mentor.name}</Card.Header>\n          <Card.Meta>{mentor.title}</Card.Meta>\n          <Card.Description>{mentor.description}</Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n        {\n          mentor.tags.map(tag => {\n            return (\n              <Label key={tag} horizontal>{tag}</Label>\n            );\n          })\n        }\n        </Card.Content>\n        <Card.Content extra>\n        {\n          mentor.channels.map(channel => {\n            const { icon, url } = getChannelInfo(channel);\n            return (\n              <a key={channel.type} href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                <Label key={icon} content={channel.type} icon={icon} />\n              </a>\n            )\n          })\n        }\n        </Card.Content>\n      </Card>)\n    });\n\n    return (\n      <div className=\"mentors-wrapper\">\n        <Card.Group centered>\n          <InfiniteScroll\n            className=\"ui centered cards\"\n            loadMore={this.loadMore}\n            hasMore={items.length < mentors.length}\n          >\n            {items}\n          </InfiniteScroll>\n        </Card.Group>\n      </div>);\n  }\n}","import React from 'react';\n\nconst Logo = (props) => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width={props.width || 628} height={props.height || 348} viewBox=\"0 0 628 348\">\n      <g fill={props.color || '#FFF'} fillRule=\"evenodd\">\n        <polygon points=\"407 46.595 534.639 174 407 301.405 453.681 348 628 174 453.681 0\"/>\n        <path d=\"M388,301.404983 L260.309746,174 L388,46.5950165 L341.243142,0 L213.395634,127.404983 L166.796029,174 L137.337112,203.35695 C125.387266,215.421113 107.308026,219.09616 91.5713583,212.659957 C75.8346911,206.223754 65.5586778,190.951578 65.5586778,174 C65.5586778,157.048422 75.8346911,141.776246 91.5713583,135.340043 C107.308026,128.90384 125.387266,132.578887 137.337112,144.64305 L151.909317,159.164815 L198.666175,112.569799 L184.09397,98.0480336 C153.262621,67.3014871 106.879638,58.0944242 66.5791953,74.7212474 C26.2787524,91.3480705 0,130.533311 0,174 C0,217.466689 26.2787524,256.651929 66.5791953,273.278753 C106.879638,289.905576 153.262621,280.698513 184.09397,249.951966 L213.552888,220.595017 L341.400396,348 L388,301.404983 Z\"/>\n      </g>\n    </svg>\n  );\n}\n\nexport default Logo;","import './App.css';\nimport mentors from './mentors.json';\n\nimport React, { Component } from 'react';\nimport { tags, countries } from './lists';\nimport AutoComplete from './AutoComplete';\nimport MentorsList from './MentorsList';\nimport Logo from './Logo';\n\nconst tagsSource = tags.map(tag => ({title: tag}));\nconst countriesSource = countries.map(country => ({title: country}));\n\n// const serverEndpoint = 'http://localhost:3001';\nclass App extends Component {\n  state = {\n    mentors\n  }\n\n  handleTagSelect = (result) => {\n    this.setState({\n      tag: result.title\n    })\n  }\n\n  handleCountrySelect = (result) => {\n    this.setState({\n      country: result.title\n    })\n  }\n\n  filterMentors = mentor =>  {\n    const { tag, country } = this.state;\n    return (!tag || mentor.tags.includes(tag)) &&\n           (!country || mentor.country === country);\n  }\n\n  resetTag = () => {\n    this.setState({\n      tag: '',\n    });\n  }\n\n  resetCountry = () => {\n    this.setState({\n      country: ''\n    });\n  }\n\n  // async componentDidMount() {\n  //   const mentors = await fetch(`${serverEndpoint}/get_mentors`).then(res => res.json());\n  //   this.setState({\n  //     mentors\n  //   })\n  // }\n\n  render() {\n    const mentors = this.state.mentors.filter(this.filterMentors);\n\n    for (let index = 0; index < 7; index++) {\n      mentors.push(...mentors);\n    }\n\n    return (\n      <div className=\"app\">\n        <header className=\"main-header\">\n          <h1>Search for mentor</h1>\n          <Logo\n            width={110}\n            height={50}\n            color=\"#009d6e\" />\n        </header>\n        <AutoComplete\n          placeholder=\"Language or Technology\"\n          source={tagsSource}\n          handleResultSelect={this.handleTagSelect}\n          onReset={this.resetTag}\n        />\n        <AutoComplete\n          placeholder=\"Country\"\n          source={countriesSource}\n          handleResultSelect={this.handleCountrySelect}\n          onReset={this.resetCountry}\n        />\n        <MentorsList\n          mentors={mentors}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export const tags = [\n  'nodejs',\n  'react',\n  'mongodb',\n  'php',\n  'mysql',\n  'webpack'\n]\n\nexport const countries = [\n  'Israel',\n  'Spain'\n]","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}